{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\tx9105\ri-69\pardirnatural

\f0\fs24 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\tx9105\pardeftab720\ri-69
\cf0 			
\b \ul Department of Computer Science and Technology 7\up16 th \up0 Semester, 2013\

\b0 \ulnone \
 					          
\b \ul Compiler Design Laboratory\ulnone \

\b0 \

\b NAME
\i  
\i0\b0 : RAMIT DAS ; 
\b CLASS ROLL 
\b0 : 24 ; 
\b ID 
\b0 : 110510037\
\
							
\b\fs26 Assignment 2\

\fs24 \
Objective \
	
\b0 \
	Familiarisation with the YACC and design of a parser that recognises declaration statements.\
\

\b Key Issues/Features\
	\
	1. 
\b0\fs22 An YACC file was written. The grammar consisted of only declaration statements, which was the objective of this assignment. Figuring this out was in itself a bit tedious. Thankfully, we were given  a tutorial that we could refer to for our understanding. The Terminals were declared with \'91%token\'92 tag and the non-terminals were identified by \'91%type\'92 tag.\
\
	
\b\fs24 2.
\b0\fs22  The hash table used here stored the type of the identifier along with the identifier. Its hash function was a simple ascii sum calculating one. Its maximum size was 101 a product of two prime numbers 3, 37. The insertion of an identifier with its type was demarcated with a success indicating return of the integer value 1, else a 0 was returned.\
\
	
\b\fs24 3.
\b0\fs22  The grammar rules specified are as written below :\
		dcl : dcl dcl_smt | dcl_smt ;\
                     dcl_smt : type id_list ;\
		type : TYPE_TOKEN\
		id_list : id_list , NAME | NAME ;\
               (Contrary to normal convention here the capitalised characters represent terminals of the GRAMMAR and the words in small letters the non-terminals.)\
\
	
\b\fs24 4. 
\b0\fs22 The strdup function was called to duplicate the yytext string into yylval.str and the token ( the terminal type) was returned.\
\
	
\b\fs24 5. 
\b0\fs22 A subroutine for displaying the symbol table was written and was also called afterwards.\
\
	
\b\fs24 6.
\b0\fs22  \'91yyerrror()\'92 a parser function,  displayed the error message and aborted execution of the program.\
\
	
\b\fs24 7. 
\b0\fs22  Steps to run the program is a bit complex and lengthy so here goes :\
		a. $flex test_lex.l\
		b. $bison gram.y\
		c. $cc y.tab.c lex.yy.c \
		d. $./a.out< input_file_program}