{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\tx9105\ri-69\pardirnatural

\f0\fs24 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\tx9105\pardeftab720\ri-69
\cf0 			
\b \ul Department of Computer Science and Technology 7\up16 th \up0 Semester, 2013\

\b0 \ulnone \
 					          
\b \ul Compiler Design Laboratory\ulnone \

\b0 \

\b NAME
\i  
\i0\b0 : RAMIT DAS ; 
\b CLASS ROLL 
\b0 : 24 ; 
\b ID 
\b0 : 110510037\
\
							
\b\fs26 Assignment 3\

\fs24 \
Objective \
 	
\b0 Taking the parser to its next step. That is, after being able to understand and store declaration statements, adding a whole lot more functionality for realising common programming constructs such as if, if-else, for, while loop structures.\
\

\b Key Issues/Features\
\
	1. 
\b0  Each of the tokens of the C-syntax if,else, etc were represented as modified constructs that which would be easier for us to realise as a string while parsing the lexemes. \
For eg. >= is GE ( mnemonic for greater than equal to).\
	
\b 2. 
\b0 The program does not move a step further to generate intermediate code of the input program, which leads to the final realisation of the program in a lower level assembly code, finally reducing to the target machine code.\
	
\b 3.  
\b0 The grammar for each such programming constructs was included in the YACC file modified from the last one.\
		A few such grammar rules are :\
		(words in lower alphabets indicate terminals and the obverse are the non-terminals.)\
		BLOCK : assgn_bl BLOCK\
      			      | assgn_bl                  \
   			      | IF_ST BLOCK\
   			      | IF_ST             \
   			      | IF_ELSE_ST BLOCK\
 			      | IF_ELSE_ST        \
    			      | WHILE_ST BLOCK \
			      | WHILE_ST          \
			      | FOR_ST BLOCK\
      			      | FOR_ST            ;\
             	The meaning of such a grammar is plain and simple. Any block of a programming language may internally contain a block, an if statement, an if statement block, an if-else statement block, a while statement block, only a while statement, for statements and most importantly assignment statements!\
\

\b REMARKS
\b0 \
    
\b 1. 
\b0 The program is not bug-free. May contain a lot of parsing errors. For eg, if the ordering of the grammar is not correct in the yacc file then a particular block of statement may never be checked and recognised.Also the entries in the symbol table may not always be correct.}